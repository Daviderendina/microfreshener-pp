description: mydemo 2.0
tosca_definitions_version: micro_tosca_yaml_1.4
imports:
- {micro: 'https://di-unipi-socc.github.io/microTOSCA/1.4/microTOSCA.yaml'}
topology_template:
  groups:
    edge:
      members: [M.default, A.default.svc, B.default.svc, C.default.svc, ingress-FG.default]
      type: micro.groups.Edge
  node_templates:
    A.default:
      type: micro.nodes.Service
    B.default:
      requirements:
        - {interaction: A.default.svc}
        - {interaction: F.default.svc}
        - {interaction: H.default}
        - {interaction: M.default}
      type: micro.nodes.Service
    C.default:
      requirements:
      - {interaction: D.default.svc}
      type: micro.nodes.Service
    D.default:
      type: micro.nodes.Service
    E.default:
      requirements:
      - {interaction: D.default.svc}
      type: micro.nodes.Service
    F.FG.default:
      type: micro.nodes.Service
    G.FG.default:
      type: micro.nodes.Service
    H.default:
      requirements:
      - {interaction: L.default}
      type: micro.nodes.Service
    L.default:
      type: micro.nodes.Service
    M.default:
      type: micro.nodes.Service
    N.default:
      requirements:
      - {interaction: L.default}
      type: micro.nodes.Service
    A.default.svc:
      type: micro.nodes.MessageRouter
      requirements:
        - {interaction: A.default}
    B.default.svc:
      type: micro.nodes.MessageRouter
      requirements:
        - {interaction: B.default}
    C.default.svc:
      type: micro.nodes.MessageRouter
      requirements:
        - {interaction: C.default}
    D.default.svc:
      type: micro.nodes.MessageRouter
      requirements:
        - {interaction: D.default}
    F.default.svc:
      type: micro.nodes.MessageRouter
      requirements:
        - {interaction: F.FG.default}
    G.default.svc:
      type: micro.nodes.MessageRouter
      requirements:
        - {interaction: G.FG.default}
    N.default.svc:
      type: micro.nodes.MessageRouter
      requirements:
        - {interaction: N.default}

    ingress-FG.default:
      type: micro.nodes.MessageRouter
      requirements:
        - {interaction: F.default.svc}
  relationship_templates:
    c:
      properties: {circuit_breaker: true}
      type: micro.relationships.InteractsWith
    cd:
      properties: {circuit_breaker: true, dynamic_discovery: true}
      type: micro.relationships.InteractsWith
    d:
      properties: {dynamic_discovery: true}
      type: micro.relationships.InteractsWith
    t:
      properties: {timeout: true}
      type: micro.relationships.InteractsWith
    tc:
      properties: {circuit_breaker: true, timeout: true}
      type: micro.relationships.InteractsWith
    tcd:
      properties: {circuit_breaker: true, dynamic_discovery: true, timeout: true}
      type: micro.relationships.InteractsWith
    td:
      properties: {dynamic_discovery: true, timeout: true}
      type: micro.relationships.InteractsWith

